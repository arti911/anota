{"version":3,"sources":["components/Modal/Title/index.js","components/DragHandle/index.js","components/Modal/Todo/todoSlice.js","components/Modal/Actions/constants.js","components/Modal/Todo/index.js","components/Modal/SortableItem/index.js","components/Modal/SortableList/index.js","constants.js","components/Modal/Input/index.js","components/Note/noteSlice.js","components/Modal/Actions/index.js","appSlice.js","components/Modal/modalSlice.js","components/Modal/index.js","components/Logo/index.js","components/Header/index.js","components/Note/Popover/index.js","components/Note/index.js","components/SortableItemNote/index.js","components/SortableListOfNotes/index.js","components/Content/index.js","components/Footer/index.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","store/index.js","index.js","utils.js"],"names":["Text","Typography","TitleModal","props","title","useSelector","state","modal","useEffect","setTitleHandler","options","onChange","editable","DragHandle","SortableHandle","className","MenuOutlined","todoSlice","createSlice","name","initialState","todos","isEdit","reducers","saveTodo","action","push","payload","checkTodo","index","todo","splice","removeTodo","toggleEdit","saveEditTodo","itemIndex","findIndex","item","id","editTodos","concat","cleatTodos","length","sortTodos","actions","ACTION_TYPE","SOLUTION","TodoModal","setTodoTitleHandler","setCurrentTodoHandler","dispatch","useDispatch","edit","useCallback","confirm","message","success","shape","icon","EditOutlined","type","onClick","okText","cancelText","onConfirm","DeleteOutlined","danger","onCheck","event","isCheck","target","checked","Item","SortableItem","SortableElement","Todo","indx","SortableList","SortableContainer","dataSource","renderItem","ref","itemRef","DEFAULT_TODO","InputModal","onChangeTodoTitle","value","save","data","Date","now","todoTitle","trim","saveEdit","currentTodo","onSaveTodo","includes","split","filter","map","onClose","placeholder","disabled","CloseOutlined","noteSlice","isVisibleNote","setVisibleNote","undefined","Actions","note","useState","actionType","setActionType","isCompleted","some","completeTodo","onToggleVisibleNote","resetTodos","removeTodos","newTodos","onActionTodos","copyableSettings","text","join","gutter","md","xs","block","EyeInvisibleOutlined","EyeOutlined","copyable","ReloadOutlined","appSlice","getNotes","saveNote","saveEditNote","removeNote","saveNotesAfterSorting","modalSlice","visibleModal","currentNoteIndex","onToggleShow","setTitleEdit","setCurrentNoteIndex","AddModal","itemListRef","useRef","visible","localTitle","setLocalTitle","setCurrentTodo","setTodoTitle","onSaveNote","Number","isFinite","warning","Title","destroyOnClose","onOk","onCancel","Input","onSortEnd","oldIndex","newIndex","arrayMove","useDragHandle","helperClass","getContainer","ReactDOM","findDOMNode","current","parentElement","Logo","Header","Layout","HeaderAnota","notes","anota","justify","align","valueStyle","color","PopoverNote","onShowModal","ellipsisSetting","rows","tooltip","expandable","symbol","Note","showNote","setShowNote","height","setHeight","cardContentRef","rootClass","classname","onShowNote","firstElementChild","offsetHeight","style","minHeight","header","wrap","span","level","ellipsis","textAlign","placement","trigger","content","Popover","zIndex","EllipsisOutlined","footer","size","SortableItemNote","sm","lg","xl","SortableListOfNotes","display","Content","ContentAnota","axis","pressDelay","useWindowAsScrollContainer","EditFilled","Footer","FooterAnota","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","store","subscribe","lists","get","getState","localStorage","setItem","JSON","stringify","key","response","getItem","parse","e","fetchNotes","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.98739f9f.chunk.js","sourcesContent":["import { Typography } from \"antd\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst TitleModal = (props) => {\r\n  const title = useSelector((state) => state.modal.title);\r\n\r\n  useEffect(() => {\r\n    props.setTitleHandler(title);\r\n  }, []);\r\n\r\n  const options = {\r\n    onChange: props.setTitleHandler\r\n  };\r\n\r\n  return <Text editable={options}>{props.title}</Text>;\r\n};\r\n\r\nexport default TitleModal;\r\n","import { SortableHandle } from \"react-sortable-hoc\";\r\nimport { MenuOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst DragHandle = SortableHandle(() => <div className=\"drag-handle\"><MenuOutlined /></div>);\r\n\r\nexport default DragHandle;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todo\",\r\n  initialState: {\r\n    todos: [],\r\n    isEdit: false\r\n  },\r\n  reducers: {\r\n    saveTodo: (state, action) => {\r\n      state.todos.push(action.payload);\r\n    },\r\n    checkTodo: (state, action) => {\r\n      const { index, todo } = action.payload;\r\n\r\n      state.todos.splice(index, 1, todo);\r\n    },\r\n    removeTodo: (state, action) => {\r\n      state.todos.splice(action.payload, 1);\r\n    },\r\n    toggleEdit: (state, action) => {\r\n      state.isEdit = action.payload;\r\n    },\r\n    saveEditTodo: (state, action) => {\r\n      const itemIndex = state.todos.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n\r\n      state.todos.splice(itemIndex, 1, action.payload);\r\n    },\r\n    editTodos: (state, action) => {\r\n      state.todos = state.todos.concat(action.payload);\r\n    },\r\n    cleatTodos: (state, action) => {\r\n      state.todos.splice(0, state.todos.length);\r\n    },\r\n    sortTodos: (state, action) => {\r\n      state.todos = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  saveTodo,\r\n  checkTodo,\r\n  removeTodo,\r\n  toggleEdit,\r\n  saveEditTodo,\r\n  editTodos,\r\n  cleatTodos,\r\n  sortTodos\r\n} = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;\r\n","export const ACTION_TYPE = {\r\n  RESET: \"RESET\",\r\n  REMOVE: \"REMOVE\",\r\n};\r\n\r\n\r\nexport const SOLUTION = {\r\n  YES: \"Да\",\r\n  NO: \"Нет\",\r\n};\r\n","import { Button, List, Checkbox, Popconfirm, message } from \"antd\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport DragHandle from \"../../DragHandle\";\r\n\r\nimport { checkTodo, removeTodo, toggleEdit } from \"./todoSlice\";\r\nimport { SOLUTION } from \"../Actions/constants\";\r\n\r\nconst TodoModal = ({\r\n  todo,\r\n  index,\r\n  setTodoTitleHandler,\r\n  setCurrentTodoHandler\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const todos = useSelector((state) => state.todo.todos);\r\n\r\n  const edit = useCallback(() => {\r\n    dispatch(toggleEdit(true));\r\n    setTodoTitleHandler(todo.title);\r\n    setCurrentTodoHandler(todo);\r\n  }, [dispatch, todo, setTodoTitleHandler, setCurrentTodoHandler]);\r\n\r\n  const confirm = useCallback(() => {\r\n    dispatch(removeTodo(index));\r\n    message.success(`${todo.title} успешно удален!`);\r\n  }, [dispatch, index, todo]);\r\n\r\n  const actions = [\r\n    <Button\r\n      shape=\"circle\"\r\n      icon={<EditOutlined />}\r\n      type=\"primary\"\r\n      onClick={edit}\r\n    ></Button>,\r\n    <Popconfirm\r\n      title={`Удалить ${todo.title}?`}\r\n      okText={SOLUTION.YES}\r\n      cancelText={SOLUTION.NO}\r\n      onConfirm={confirm}\r\n    >\r\n      <Button shape=\"circle\" icon={<DeleteOutlined />} danger={true}></Button>\r\n    </Popconfirm>\r\n  ];\r\n\r\n  const onCheck = useCallback(\r\n    (event) => {\r\n      dispatch(\r\n        checkTodo({\r\n          index,\r\n          todo: {\r\n            ...todos[index],\r\n            isCheck: event.target.checked\r\n          }\r\n        })\r\n      );\r\n    },\r\n    [dispatch, todos, index]\r\n  );\r\n\r\n  return (\r\n    <List.Item className=\"modal-list__item\" actions={actions}>\r\n      <DragHandle />\r\n      <Checkbox checked={todo.isCheck} onChange={onCheck}>\r\n        {todo.title}\r\n      </Checkbox>\r\n    </List.Item>\r\n  );\r\n};\r\n\r\nexport default TodoModal;\r\n","import { SortableElement } from \"react-sortable-hoc\";\r\n\r\nimport TodoModal from \"../Todo\";\r\n\r\nconst SortableItem = SortableElement((props) => (\r\n  <TodoModal\r\n    todo={props.todo}\r\n    index={props.indx}\r\n    setTodoTitleHandler={props.setTodoTitleHandler}\r\n    setCurrentTodoHandler={props.setCurrentTodoHandler}\r\n  />\r\n));\r\n\r\nexport default SortableItem;\r\n","import { List } from \"antd\";\r\nimport { SortableContainer } from \"react-sortable-hoc\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport SortableItem from \"../SortableItem\";\r\n\r\nconst SortableList = SortableContainer((props) => {\r\n  const todos = useSelector((state) => state.todo.todos);\r\n\r\n  return (\r\n    <List\r\n      dataSource={todos}\r\n      renderItem={(item, index) => (\r\n        <SortableItem\r\n          todo={item}\r\n          indx={index}\r\n          setTodoTitleHandler={props.setTodoTitleHandler}\r\n          setCurrentTodoHandler={props.setCurrentTodoHandler}\r\n          index={index}\r\n          key={item.id}\r\n          ref={props.itemRef}\r\n        />\r\n      )}\r\n    />\r\n  )\r\n});\r\n\r\nexport default SortableList;\r\n","export const DEFAULT_TODO = {\r\n  id: 0,\r\n  title: \"\",\r\n  isCheck: false,\r\n};\r\n","import { Input, Button, Row } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { DEFAULT_TODO } from \"../../../constants\";\r\n\r\nimport { saveTodo, saveEditTodo, toggleEdit } from \"../Todo/todoSlice\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst SEPARATOR = \";\";\r\n\r\nconst InputModal = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isEdit = useSelector((state) => state.todo.isEdit);\r\n\r\n  const onChangeTodoTitle = useCallback(\r\n    ({ target }) => {\r\n      props.setTodoTitleHandler(target.value);\r\n    },\r\n    [props]\r\n  );\r\n\r\n  const save = useCallback((todo = \"\", index = 0) => {\r\n    const data = {\r\n      ...DEFAULT_TODO,\r\n      id: Date.now() + index,\r\n      title: todo === \"\" ? props.todoTitle.trim() : todo.trim(),\r\n    };\r\n\r\n    dispatch(saveTodo(data));\r\n  }, [ dispatch, props ]);\r\n\r\n  const saveEdit = useCallback(() => {\r\n    const data = {\r\n      ...props.currentTodo,\r\n      title: props.todoTitle.trim()\r\n    };\r\n\r\n    dispatch(saveEditTodo(data));\r\n  }, [ dispatch, props ]);\r\n\r\n  const onSaveTodo = useCallback(() => {\r\n    if (isEdit) {\r\n      saveEdit();\r\n      dispatch(toggleEdit(false));\r\n    } else {\r\n\r\n      if (props.todoTitle.includes(SEPARATOR)) {\r\n        props.todoTitle.trim().split(SEPARATOR).filter((item) => item.trim() !== \"\").map((item, index) => save(item, index));\r\n      } else {\r\n        save()\r\n      }\r\n\r\n    }\r\n\r\n    props.setTodoTitleHandler(\"\");\r\n  }, [props, isEdit, dispatch, save, saveEdit]);\r\n\r\n  const onClose = useCallback(() => {\r\n    props.setTodoTitleHandler(\"\");\r\n    props.setCurrentTodoHandler(null);\r\n    dispatch(toggleEdit(false));\r\n  }, [props, dispatch]);\r\n\r\n  return (\r\n    <Row className=\"anota-row\">\r\n      <Input\r\n        placeholder=\"Добавьте пункт\"\r\n        onChange={onChangeTodoTitle}\r\n        value={props.todoTitle}\r\n      />\r\n      <Button\r\n        type=\"primary\"\r\n        disabled={props.todoTitle.length === 0}\r\n        onClick={onSaveTodo}\r\n      >\r\n        {isEdit ? \"Сохранить изменения\" : \"Добавить\"}\r\n      </Button>\r\n      <Button icon={<CloseOutlined />} type=\"text\" onClick={onClose}></Button>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default InputModal;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst noteSlice = createSlice({\r\n  name: \"note\",\r\n  initialState: {\r\n    isVisibleNote: true,\r\n  },\r\n  reducers: {\r\n    setVisibleNote: (state, action) => {\r\n      state.isVisibleNote = (action.payload === undefined) ? true : action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setVisibleNote } = noteSlice.actions;\r\n\r\nexport default noteSlice.reducer;\r\n","import { Button, Popconfirm, Row, Col, Typography } from \"antd\";\r\nimport {\r\n  EyeOutlined,\r\n  EyeInvisibleOutlined,\r\n  DeleteOutlined,\r\n  ReloadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useCallback, useState } from \"react\";\r\n\r\nimport { setVisibleNote } from \"../../Note/noteSlice\";\r\nimport { checkTodo, sortTodos } from \"../Todo/todoSlice\";\r\nimport { ACTION_TYPE, SOLUTION } from \"./constants\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst Actions = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const todos = useSelector((state) => state.todo.todos);\r\n  const isVisibleNote = useSelector((state) => state.note.isVisibleNote);\r\n\r\n  const [ actionType, setActionType ] = useState(null);\r\n\r\n  const isCompleted = todos.some((item) => item.isCheck);\r\n\r\n  const completeTodo = todos.filter((item) => item.isCheck);\r\n\r\n  const onToggleVisibleNote = useCallback(() => {\r\n    dispatch(setVisibleNote(!isVisibleNote));\r\n  }, [dispatch, isVisibleNote]);\r\n\r\n  const resetTodos = useCallback((index) => {\r\n    dispatch(checkTodo({\r\n      index,\r\n      todo: {\r\n        ...todos[index],\r\n        isCheck: false,\r\n      }\r\n    }));\r\n  }, [ dispatch, todos ]);\r\n\r\n  const removeTodos = useCallback(() => {\r\n    const newTodos = todos.filter((item) => !item.isCheck);\r\n    \r\n    dispatch(sortTodos(newTodos));\r\n  }, [ todos, dispatch ]);\r\n\r\n  const onActionTodos = useCallback(() => {\r\n    for (let todo of completeTodo) {\r\n      const index = todos.findIndex((item) => item.id === todo.id);\r\n\r\n      actionType === ACTION_TYPE.RESET ? resetTodos(index) : removeTodos();\r\n    }\r\n  }, [ resetTodos, removeTodos, completeTodo, todos, actionType ]);\r\n\r\n  const copyableSettings = {\r\n    text: completeTodo.map((item) => item.title).join(\";\"),\r\n  };\r\n\r\n  return (\r\n    <Row gutter={[ 8, 8 ]} className=\"actions\">\r\n      <Col md={12} xs={24}>\r\n        <Button\r\n          type=\"primary\"\r\n          block={true}\r\n          icon={isVisibleNote ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={onToggleVisibleNote}\r\n        >\r\n          {isVisibleNote ? \"Скрыть\" : \"Показать\"}\r\n        </Button>\r\n      </Col>\r\n      <Col md={12} xs={24}>\r\n        <Button\r\n          disabled={!isCompleted}\r\n          type=\"default\"\r\n          block={true}\r\n          className=\"actions__btn actions__btn--copy\"\r\n        >\r\n          <Text copyable={copyableSettings}></Text>\r\n        </Button>\r\n      </Col>\r\n      <Col md={12} xs={24}>\r\n        <Popconfirm\r\n          title={`Вы действительно хотите сбросить отметки у ${completeTodo.map((item) => item.title).join(\", \")}?`}\r\n          okText={SOLUTION.YES}\r\n          cancelText={SOLUTION.NO}\r\n          onConfirm={onActionTodos}\r\n        >\r\n          <Button\r\n            disabled={!isCompleted}\r\n            type=\"primary\"\r\n            icon={<ReloadOutlined />}\r\n            block={true}\r\n            onClick={() => setActionType(ACTION_TYPE.RESET)}\r\n          >\r\n            Сбросить\r\n          </Button>\r\n        </Popconfirm>\r\n      </Col>\r\n      <Col md={12} xs={24}>\r\n        <Popconfirm\r\n          title={`Вы действительно хотите удалить ${completeTodo.map((item) => item.title).join(\", \")}?`}\r\n          okText={SOLUTION.YES}\r\n          cancelText={SOLUTION.NO}\r\n          onConfirm={onActionTodos}\r\n        >\r\n          <Button\r\n            danger\r\n            disabled={!isCompleted}\r\n            type=\"primary\"\r\n            icon={<DeleteOutlined />}\r\n            block={true}\r\n            onClick={() => setActionType(ACTION_TYPE.REMOVE)}\r\n          >\r\n            Удалить\r\n          </Button>\r\n        </Popconfirm>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState: [],\r\n  reducers: {\r\n    getNotes: (state, action) => {\r\n      return action.payload;\r\n    },\r\n    saveNote: (state, action) => {\r\n      state.push(action.payload);\r\n    },\r\n    saveEditNote: (state, action) => {\r\n      state.splice(action.payload.index, 1, action.payload.note);\r\n    },\r\n    removeNote: (state, action) => {\r\n      return state.filter((item) => item.id !== action.payload);\r\n    },\r\n    saveNotesAfterSorting: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { getNotes, saveNote, saveEditNote, removeNote, saveNotesAfterSorting } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst modalSlice = createSlice({\r\n  name: \"modal\",\r\n  initialState: {\r\n    visibleModal: false,\r\n    title: \"Новая заметка\",\r\n    currentNoteIndex: null\r\n  },\r\n  reducers: {\r\n    onToggleShow: (state, action) => {\r\n      state.visibleModal = action.payload;\r\n    },\r\n    setTitleEdit: (state, action) => {\r\n      state.title = action.payload;\r\n    },\r\n    setCurrentNoteIndex: (state, action) => {\r\n      state.currentNoteIndex = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  onToggleShow,\r\n  setTitleEdit,\r\n  setCurrentNoteIndex\r\n} = modalSlice.actions;\r\n\r\nexport default modalSlice.reducer;\r\n","import { useCallback, useRef, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Modal, message } from \"antd\";\r\nimport arrayMove from \"array-move\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport TitleModal from \"./Title\";\r\nimport SortableList from \"./SortableList\";\r\nimport InputModal from \"./Input\";\r\nimport Actions from \"./Actions\";\r\n\r\nimport { saveNote, saveEditNote } from \"../../appSlice\";\r\nimport { onToggleShow, setCurrentNoteIndex, setTitleEdit } from \"./modalSlice\";\r\nimport { cleatTodos, sortTodos } from \"./Todo/todoSlice\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AddModal = () => {\r\n  const itemListRef = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const visible = useSelector((state) => state.modal.visibleModal);\r\n  const todos = useSelector((state) => state.todo.todos);\r\n  const currentNoteIndex = useSelector((state) => state.modal.currentNoteIndex);\r\n  const isVisibleNote = useSelector((state) => state.note.isVisibleNote);\r\n\r\n  const [localTitle, setLocalTitle] = useState(\"\");\r\n  const [currentTodo, setCurrentTodo] = useState(null);\r\n  const [todoTitle, setTodoTitle] = useState(\"\");\r\n\r\n  const onCancel = () => {\r\n    dispatch(onToggleShow(false));\r\n    dispatch(cleatTodos());\r\n    dispatch(setCurrentNoteIndex(null));\r\n    dispatch(setTitleEdit(\"Новая заметка\"));\r\n    setTodoTitle(\"\");\r\n  };\r\n\r\n  const saveEdit = useCallback((index) => {\r\n      const data = {\r\n        note: {\r\n          id: Date.now(),\r\n          title: localTitle,\r\n          todos,\r\n          isVisibleNote,\r\n        },\r\n        index\r\n      };\r\n\r\n      dispatch(saveEditNote(data));\r\n      dispatch(setCurrentNoteIndex(null));\r\n    }, [ dispatch, localTitle, todos, isVisibleNote ]);\r\n\r\n  const save = useCallback(() => {\r\n    const data = {\r\n      id: Date.now(),\r\n      title: localTitle,\r\n      todos,\r\n      isVisibleNote,\r\n    };\r\n\r\n    dispatch(saveNote(data));\r\n  }, [ dispatch, localTitle, todos, isVisibleNote ]);\r\n\r\n  const onSaveNote = useCallback(() => {\r\n    if (todos.length > 0) {\r\n      Number.isFinite(currentNoteIndex) ? saveEdit(currentNoteIndex) : save();\r\n\r\n      dispatch(onToggleShow(false));\r\n      dispatch(setTitleEdit(\"Новая заметка\"));\r\n      dispatch(cleatTodos());\r\n      setTodoTitle(\"\");\r\n    } else {\r\n      message.warning(\"Добавьте контент в заметку!\");\r\n    }\r\n  }, [ dispatch, save, saveEdit, todos, currentNoteIndex ]);\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => dispatch(sortTodos(arrayMove(todos, oldIndex, newIndex)));\r\n\r\n  return (\r\n    <Modal\r\n      title={<TitleModal title={localTitle} setTitleHandler={setLocalTitle} />}\r\n      visible={visible}\r\n      cancelText={<></>}\r\n      destroyOnClose={true}\r\n      onOk={onSaveNote}\r\n      onCancel={onCancel}\r\n    >\r\n      <InputModal\r\n        todoTitle={todoTitle}\r\n        currentTodo={currentTodo}\r\n        setTodoTitleHandler={setTodoTitle}\r\n        setCurrentTodoHandler={setCurrentTodo}\r\n      />\r\n      {todos.length > 0 && (\r\n        <SortableList\r\n          itemRef={itemListRef}\r\n          setTodoTitleHandler={setTodoTitle}\r\n          setCurrentTodoHandler={setCurrentTodo}\r\n          onSortEnd={onSortEnd}\r\n          useDragHandle\r\n          helperClass=\"modal-list\"\r\n          getContainer={() => ReactDOM.findDOMNode(itemListRef.current).parentElement}\r\n        />\r\n      )}\r\n      <Actions />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddModal;\r\n","import \"./style.scss\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"logo\">\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Row, Col, Layout, Statistic } from \"antd\";\r\n\r\nimport Logo from \"../Logo\";\r\n\r\nconst { Header } = Layout;\r\n\r\nconst HeaderAnota = () => {\r\n  const notes = useSelector((state) => state.anota);\r\n\r\n  return (\r\n    <Header className=\"anota__header\">\r\n      <Row justify=\"space-between\" align=\"middle\">\r\n        <Col>\r\n          <Logo />\r\n        </Col>\r\n        <Col>\r\n          <Statistic\r\n            title=\"Количество заметок\"\r\n            value={notes.length}\r\n            valueStyle={{ color: \"white\" }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default HeaderAnota;\r\n","import { Button, Popconfirm, Typography } from \"antd\";\r\nimport { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { removeNote } from \"../../../appSlice\";\r\nimport { SOLUTION } from \"../../Modal/Actions/constants\";\r\nimport {\r\n  onToggleShow,\r\n  setTitleEdit,\r\n  setCurrentNoteIndex\r\n} from \"../../Modal/modalSlice\";\r\nimport { editTodos } from \"../../Modal/Todo/todoSlice\";\r\nimport { setVisibleNote } from \"../noteSlice\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst PopoverNote = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const confirm = useCallback(\r\n    () => dispatch(removeNote(props.id)),\r\n    [props.id, dispatch]\r\n  );\r\n\r\n  const onShowModal = useCallback(() => {\r\n    dispatch(editTodos(props.todos));\r\n    dispatch(setTitleEdit(props.title));\r\n    dispatch(onToggleShow(true));\r\n    dispatch(setCurrentNoteIndex(props.index));\r\n    dispatch(setVisibleNote(props.isVisibleNote));\r\n  }, [dispatch, props]);\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"text\" block={true} onClick={onShowModal}>\r\n        <Text type=\"success\">Редактировать</Text>\r\n      </Button>\r\n      <Popconfirm\r\n        title={`Удалить ${props.title}`}\r\n        okText={SOLUTION.YES}\r\n        cancelText={SOLUTION.NO}\r\n        onConfirm={confirm}\r\n      >\r\n        <Button type=\"text\" block={true}>\r\n          <Text type=\"danger\">Удалить</Text>\r\n        </Button>\r\n      </Popconfirm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PopoverNote;\r\n","import { Checkbox, Typography, Popover, Button, List, Row, Col } from \"antd\";\r\nimport { EllipsisOutlined, EyeOutlined } from \"@ant-design/icons\";\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport classname from \"classnames\";\r\n\r\nimport PopoverNote from \"./Popover\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst ellipsisSetting = {\r\n  rows: 1,\r\n  tooltip: true,\r\n  expandable: true,\r\n  symbol: <span></span>,\r\n};\r\n\r\nconst Note = (props) => {\r\n  const [ showNote, setShowNote ] = useState(!props.isVisibleNote);\r\n  const [ height, setHeight ] = useState(0);\r\n\r\n  const cardContentRef = useRef(null);\r\n\r\n  const rootClass = classname(\"note__card\", {\r\n    \"note__card--flip\": showNote,\r\n  });\r\n\r\n  const onShowNote = useCallback(() => {\r\n    setShowNote(!showNote)\r\n  }, [ showNote ]);\r\n\r\n  \r\n  useEffect(() => {\r\n    setHeight(cardContentRef.current.firstElementChild.offsetHeight);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={rootClass} style={{ minHeight: `${height}px` }}>\r\n      <div className=\"note__wrapper note__wrapper--front\" ref={cardContentRef}>\r\n        <List\r\n          dataSource={props.todos}\r\n          renderItem={(item) => (\r\n            <List.Item>\r\n              <Checkbox checked={item.isCheck} key={item.id}>\r\n                {item.title}\r\n              </Checkbox>\r\n            </List.Item>\r\n          )}\r\n          header={\r\n            <Row justify=\"space-between\" align=\"middle\" wrap={false}>\r\n              <Col span=\"21\">\r\n                <Title level={4} ellipsis={ellipsisSetting} style={{ textAlign: \"left\" }}>{props.title}</Title>\r\n              </Col>\r\n              <Col span=\"3\">\r\n                <Popover\r\n                  placement=\"bottomRight\"\r\n                  trigger=\"click\"\r\n                  content={\r\n                    <PopoverNote {...props} />\r\n                  }\r\n                  zIndex=\"999\"\r\n                >\r\n                  <Button type=\"text\" icon={<EllipsisOutlined />}></Button>\r\n                </Popover>\r\n              </Col>\r\n            </Row>\r\n          }\r\n          footer={\r\n            <>\r\n              <div />\r\n              <div style={{ textAlign: \"center\" }}>\r\n                Done {props.todos.filter((item) => item.isCheck).length} of&nbsp; {props.todos.length}\r\n              </div>\r\n              <div>\r\n                { !props.isVisibleNote && <Button type=\"text\" icon={<EyeOutlined />} onClick={onShowNote} /> }\r\n              </div>\r\n            </>\r\n          }\r\n        ></List>\r\n      </div>\r\n      <div className=\"note__wrapper note__wrapper--back\" onClick={onShowNote}>\r\n        <Button type=\"text\" size=\"large\" icon={<EyeOutlined />} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import { SortableElement } from \"react-sortable-hoc\";\r\nimport { Col } from \"antd\";\r\n\r\nimport Note from \"../Note\";\r\n\r\nconst SortableItemNote = SortableElement((props) => {\r\n  return (\r\n    <Col className=\"note\" xs={24} sm={24} md={12} lg={8} xl={6}>\r\n      <Note index={props.indx} {...props.note} />\r\n    </Col>\r\n  );\r\n});\r\n\r\nexport default SortableItemNote;\r\n","import { useSelector } from \"react-redux\";\r\nimport { SortableContainer } from \"react-sortable-hoc\";\r\nimport SortableItemNote from \"../SortableItemNote\";\r\n\r\nconst SortableListOfNotes = SortableContainer(() => {\r\n  const notes = useSelector((state) => state.anota);\r\n\r\n  return (\r\n    <div style={{ display: \"contents\" }}>\r\n      {notes.map((item, index) => (\r\n        <SortableItemNote\r\n          note={item}\r\n          indx={index}\r\n          key={item.id}\r\n          index={index}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SortableListOfNotes;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Layout, Button, Row } from \"antd\";\r\nimport { EditFilled } from \"@ant-design/icons\";\r\nimport arrayMove from 'array-move';\r\n\r\nimport SortableListOfNotes from \"../SortableListOfNotes\";\r\n\r\nimport { onToggleShow } from \"../Modal/modalSlice\";\r\nimport { saveNotesAfterSorting } from \"../../appSlice\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst ContentAnota = () => {\r\n  const dispatch = useDispatch();\r\n  const notes = useSelector((state) => state.anota);\r\n\r\n  const onShowModal = () => dispatch(onToggleShow(true));\r\n\r\n  const onSortEnd = ({oldIndex, newIndex}) => {\r\n    dispatch(saveNotesAfterSorting(arrayMove(notes, oldIndex, newIndex)));\r\n  };\r\n\r\n  return (\r\n    <Content className=\"anota__main\">\r\n      <Row gutter={[16, 24]}>\r\n        <SortableListOfNotes axis=\"xy\" pressDelay={205} onSortEnd={onSortEnd} useWindowAsScrollContainer={true} />\r\n      </Row>\r\n      <Button\r\n        type=\"primary\"\r\n        shape=\"circle\"\r\n        icon={<EditFilled />}\r\n        size=\"large\"\r\n        className=\"anota__btn-add-note\"\r\n        onClick={onShowModal}\r\n      ></Button>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ContentAnota;\r\n","import { Layout } from \"antd\";\r\n\r\nconst { Footer } = Layout;\r\n\r\nconst FooterAnota = () => {\r\n  return <Footer />;\r\n};\r\n\r\nexport default FooterAnota;\r\n","import { Layout } from \"antd\";\r\n\r\nimport \"antd/dist/antd.less\";\r\n\r\nimport AddModal from \"./components/Modal\";\r\nimport HeaderAnota from \"./components/Header\";\r\nimport ContentAnota from \"./components/Content\";\r\nimport FooterAnota from \"./components/Footer\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Layout className=\"anota\">\r\n      <HeaderAnota />\r\n      <ContentAnota />\r\n      <FooterAnota />\r\n      <AddModal />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport modalSlice from \"../components/Modal/modalSlice\";\r\nimport appSlice from \"../appSlice\";\r\nimport todoSlice from \"../components/Modal/Todo/todoSlice\";\r\nimport noteSlice from \"../components/Note/noteSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    anota: appSlice,\r\n    modal: modalSlice,\r\n    todo: todoSlice,\r\n    note: noteSlice,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { get } from \"lodash\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport \"./styles/index.scss\";\r\n\r\nimport store from \"./store\";\r\nimport { fetchNotes } from \"./utils\";\r\nimport { getNotes } from \"./appSlice\";\r\n\r\nstore.subscribe(() => {\r\n  const data = {\r\n    notes: {\r\n      lists: get(store.getState(), \"anota\", \"\")\r\n    }\r\n  };\r\n\r\n  localStorage.setItem(\"vuex\", JSON.stringify(data));\r\n});\r\n\r\nconst notes = fetchNotes();\r\n\r\nif (notes) {\r\n  store.dispatch(getNotes(notes))\r\n}\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorkerRegistration.register();\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { get } from \"lodash\";\r\n\r\nexport const fetchNotes = (key) => {\r\n  try {\r\n    const response = localStorage.getItem(\"vuex\");\r\n\r\n    if (response) {\r\n      return get(JSON.parse(response), \"notes.lists\", []);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n"],"sourceRoot":""}