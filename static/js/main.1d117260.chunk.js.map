{"version":3,"sources":["components/Modal/Title/index.js","components/DragHandle/index.js","components/Modal/Todo/todoSlice.js","components/Modal/Todo/index.js","components/Modal/SortableItem/index.js","components/Modal/SortableList/index.js","constants.js","components/Modal/Input/index.js","appSlice.js","components/Modal/modalSlice.js","components/Modal/index.js","components/Logo/index.js","components/Header/index.js","components/Note/Popover/index.js","components/Note/index.js","components/SortableItemNote/index.js","components/SortableListOfNotes/index.js","components/Content/index.js","components/Footer/index.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","store/index.js","index.js","utils.js"],"names":["Text","Typography","TitleModal","props","title","useSelector","state","modal","useEffect","setTitleHandler","options","onChange","editable","DragHandle","SortableHandle","className","MenuOutlined","todoSlice","createSlice","name","initialState","todos","isEdit","reducers","saveTodo","action","push","payload","checkTodo","index","todo","splice","removeTodo","toggleEdit","saveEditTodo","itemIndex","findIndex","item","id","editTodos","concat","cleatTodos","length","sortTodos","actions","TodoModal","setTodoTitleHandler","setCurrentTodoHandler","dispatch","useDispatch","edit","useCallback","confirm","message","success","shape","icon","EditOutlined","type","onClick","okText","cancelText","onConfirm","DeleteOutlined","danger","onCheck","event","isCheck","target","checked","Item","SortableItem","SortableElement","Todo","indx","SortableList","SortableContainer","dataSource","renderItem","ref","itemRef","DEFAULT_TODO","Date","now","InputModal","onChangeTodoTitle","value","save","data","todoTitle","saveEdit","currentTodo","onSaveTodo","onClose","gutter","placeholder","disabled","CloseOutlined","appSlice","getNotes","saveNote","saveEditNote","note","removeNote","filter","saveNotesAfterSorting","modalSlice","visibleModal","currentNoteIndex","onToggleShow","setTitleEdit","setCurrentNoteIndex","AddModal","itemListRef","useRef","visible","useState","localTitle","setLocalTitle","setCurrentTodo","setTodoTitle","onSaveNote","Number","isFinite","warning","Title","destroyOnClose","onOk","onCancel","Input","onSortEnd","oldIndex","newIndex","arrayMove","useDragHandle","helperClass","getContainer","ReactDOM","findDOMNode","current","parentElement","Logo","Header","Layout","HeaderAnota","notes","anota","justify","align","valueStyle","color","PopoverNote","noteId","onShowModal","noteTodos","noteTitle","block","Note","ellipsisSetting","rows","tooltip","expandable","symbol","header","wrap","span","level","ellipsis","style","textAlign","placement","trigger","content","Popover","zIndex","EllipsisOutlined","footer","SortableItemNote","xs","sm","md","lg","xl","SortableListOfNotes","display","map","Content","ContentAnota","axis","pressDelay","useWindowAsScrollContainer","EditFilled","size","Footer","FooterAnota","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","store","subscribe","lists","get","getState","localStorage","setItem","JSON","stringify","key","response","getItem","parse","e","fetchNotes","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.1d117260.chunk.js","sourcesContent":["import { Typography } from \"antd\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst TitleModal = (props) => {\r\n  const title = useSelector((state) => state.modal.title);\r\n\r\n  useEffect(() => {\r\n    props.setTitleHandler(title);\r\n  }, []);\r\n\r\n  const options = {\r\n    onChange: props.setTitleHandler\r\n  };\r\n\r\n  return <Text editable={options}>{props.title}</Text>;\r\n};\r\n\r\nexport default TitleModal;\r\n","import { SortableHandle } from \"react-sortable-hoc\";\r\nimport { MenuOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst DragHandle = SortableHandle(() => <div className=\"drag-handle\"><MenuOutlined /></div>);\r\n\r\nexport default DragHandle;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todo\",\r\n  initialState: {\r\n    todos: [],\r\n    isEdit: false\r\n  },\r\n  reducers: {\r\n    saveTodo: (state, action) => {\r\n      state.todos.push(action.payload);\r\n    },\r\n    checkTodo: (state, action) => {\r\n      const { index, todo } = action.payload;\r\n\r\n      state.todos.splice(index, 1, todo);\r\n    },\r\n    removeTodo: (state, action) => {\r\n      state.todos.splice(action.payload, 1);\r\n    },\r\n    toggleEdit: (state, action) => {\r\n      state.isEdit = action.payload;\r\n    },\r\n    saveEditTodo: (state, action) => {\r\n      const itemIndex = state.todos.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n\r\n      state.todos.splice(itemIndex, 1, action.payload);\r\n    },\r\n    editTodos: (state, action) => {\r\n      state.todos = state.todos.concat(action.payload);\r\n    },\r\n    cleatTodos: (state, action) => {\r\n      state.todos.splice(0, state.todos.length);\r\n    },\r\n    sortTodos: (state, action) => {\r\n      state.todos = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  saveTodo,\r\n  checkTodo,\r\n  removeTodo,\r\n  toggleEdit,\r\n  saveEditTodo,\r\n  editTodos,\r\n  cleatTodos,\r\n  sortTodos\r\n} = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;\r\n","import { Button, List, Checkbox, Popconfirm, message } from \"antd\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport DragHandle from \"../../DragHandle\";\r\n\r\nimport { checkTodo, removeTodo, toggleEdit } from \"./todoSlice\";\r\n\r\nconst TodoModal = ({\r\n  todo,\r\n  todos,\r\n  index,\r\n  setTodoTitleHandler,\r\n  setCurrentTodoHandler\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const edit = useCallback(() => {\r\n    dispatch(toggleEdit(true));\r\n    setTodoTitleHandler(todo.title);\r\n    setCurrentTodoHandler(todo);\r\n  }, [dispatch, todo, setTodoTitleHandler, setCurrentTodoHandler]);\r\n\r\n  const confirm = useCallback(() => {\r\n    dispatch(removeTodo(index));\r\n    message.success(`${todo.title} успешно удален!`);\r\n  }, [dispatch, index, todo]);\r\n\r\n  const actions = [\r\n    <Button\r\n      shape=\"circle\"\r\n      icon={<EditOutlined />}\r\n      type=\"primary\"\r\n      onClick={edit}\r\n    ></Button>,\r\n    <Popconfirm\r\n      title={`Удалить ${todo.title}?`}\r\n      okText=\"Да\"\r\n      cancelText=\"Нет\"\r\n      onConfirm={confirm}\r\n    >\r\n      <Button shape=\"circle\" icon={<DeleteOutlined />} danger={true}></Button>\r\n    </Popconfirm>\r\n  ];\r\n\r\n  const onCheck = useCallback(\r\n    (event) => {\r\n      dispatch(\r\n        checkTodo({\r\n          index: index,\r\n          todo: {\r\n            ...todos[index],\r\n            isCheck: event.target.checked\r\n          }\r\n        })\r\n      );\r\n    },\r\n    [dispatch, todos, index]\r\n  );\r\n\r\n  return (\r\n    <List.Item className=\"modal-list__item\" actions={actions}>\r\n      <DragHandle />\r\n      <Checkbox checked={todo.isCheck} onChange={onCheck}>\r\n        {todo.title}\r\n      </Checkbox>\r\n    </List.Item>\r\n  );\r\n};\r\n\r\nexport default TodoModal;\r\n","import { SortableElement } from \"react-sortable-hoc\";\r\n\r\nimport TodoModal from \"../Todo\";\r\n\r\nconst SortableItem = SortableElement((props) => (\r\n  <TodoModal\r\n    todos={props.todos}\r\n    todo={props.todo}\r\n    index={props.indx}\r\n    setTodoTitleHandler={props.setTodoTitleHandler}\r\n    setCurrentTodoHandler={props.setCurrentTodoHandler}\r\n  />\r\n));\r\n\r\nexport default SortableItem;\r\n","// import { forwardRef } from \"react\";\r\nimport { SortableContainer } from \"react-sortable-hoc\";\r\n\r\nimport { List } from \"antd\";\r\nimport SortableItem from \"../SortableItem\";\r\n\r\nconst SortableList = SortableContainer((props) => (\r\n    <List\r\n      dataSource={props.todos}\r\n      renderItem={(item, index) => (\r\n        <SortableItem\r\n          todos={props.todos}\r\n          todo={item}\r\n          indx={index}\r\n          setTodoTitleHandler={props.setTodoTitleHandler}\r\n          setCurrentTodoHandler={props.setCurrentTodoHandler}\r\n          index={index}\r\n          key={item.id}\r\n          ref={props.itemRef}\r\n        />\r\n      )}\r\n    />\r\n));\r\n\r\nexport default SortableList;\r\n","export const DEFAULT_NOTE = {\r\n  id: Date.now(),\r\n  title: \"\",\r\n  todos: [],\r\n};\r\n\r\nexport const DEFAULT_TODO = {\r\n  id: 0,\r\n  title: \"\",\r\n  isCheck: false,\r\n};\r\n","import { Input, Button, Row } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { DEFAULT_TODO } from \"../../../constants\";\r\n\r\nimport { saveTodo, saveEditTodo, toggleEdit } from \"../Todo/todoSlice\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InputModal = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isEdit = useSelector((state) => state.todo.isEdit);\r\n\r\n  const onChangeTodoTitle = useCallback(\r\n    ({ target }) => {\r\n      props.setTodoTitleHandler(target.value);\r\n    },\r\n    [props]\r\n  );\r\n\r\n  const save = useCallback(() => {\r\n    const data = {\r\n      ...DEFAULT_TODO,\r\n      id: Date.now(),\r\n      title: props.todoTitle\r\n    };\r\n\r\n    dispatch(saveTodo(data));\r\n  }, [ dispatch, props ]);\r\n\r\n  const saveEdit = useCallback(() => {\r\n    const data = {\r\n      ...props.currentTodo,\r\n      title: props.todoTitle\r\n    };\r\n\r\n    dispatch(saveEditTodo(data));\r\n  }, [ dispatch, props ]);\r\n\r\n  const onSaveTodo = useCallback(() => {\r\n    if (isEdit) {\r\n      saveEdit();\r\n      dispatch(toggleEdit(false));\r\n    } else {\r\n      save()\r\n    }\r\n\r\n    props.setTodoTitleHandler(\"\");\r\n  }, [props, isEdit, dispatch, save, saveEdit]);\r\n\r\n  const onClose = useCallback(() => {\r\n    props.setTodoTitleHandler(\"\");\r\n    props.setCurrentTodoHandler(null);\r\n    dispatch(toggleEdit(false));\r\n  }, [props, dispatch]);\r\n\r\n  return (\r\n    <Row className=\"anota-row\" gutter={[16, 16]}>\r\n      <Input\r\n        placeholder=\"Добавьте пункт\"\r\n        onChange={onChangeTodoTitle}\r\n        value={props.todoTitle}\r\n      />\r\n      <Button\r\n        type=\"primary\"\r\n        disabled={props.todoTitle.length === 0}\r\n        onClick={onSaveTodo}\r\n      >\r\n        {isEdit ? \"Сохранить изменения\" : \"Добавить\"}\r\n      </Button>\r\n      <Button icon={<CloseOutlined />} type=\"text\" onClick={onClose}></Button>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default InputModal;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState: [],\r\n  reducers: {\r\n    getNotes: (state, action) => {\r\n      return action.payload;\r\n    },\r\n    saveNote: (state, action) => {\r\n      state.push(action.payload);\r\n    },\r\n    saveEditNote: (state, action) => {\r\n      state.splice(action.payload.index, 1, action.payload.note);\r\n    },\r\n    removeNote: (state, action) => {\r\n      return state.filter((item) => item.id !== action.payload);\r\n    },\r\n    saveNotesAfterSorting: (state, action) => {\r\n      return action.payload;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { getNotes, saveNote, saveEditNote, removeNote, saveNotesAfterSorting } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst modalSlice = createSlice({\r\n  name: \"modal\",\r\n  initialState: {\r\n    visibleModal: false,\r\n    title: \"Новая заметка\",\r\n    currentNoteIndex: null\r\n  },\r\n  reducers: {\r\n    onToggleShow: (state, action) => {\r\n      state.visibleModal = action.payload;\r\n    },\r\n    setTitleEdit: (state, action) => {\r\n      state.title = action.payload;\r\n    },\r\n    setCurrentNoteIndex: (state, action) => {\r\n      state.currentNoteIndex = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  onToggleShow,\r\n  setTitleEdit,\r\n  setCurrentNoteIndex\r\n} = modalSlice.actions;\r\n\r\nexport default modalSlice.reducer;\r\n","import { useCallback, useRef, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Modal, message } from \"antd\";\r\nimport arrayMove from \"array-move\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport TitleModal from \"./Title\";\r\nimport SortableList from \"./SortableList\";\r\nimport InputModal from \"./Input\";\r\n\r\nimport { saveNote, saveEditNote } from \"../../appSlice\";\r\nimport { onToggleShow, setCurrentNoteIndex, setTitleEdit } from \"./modalSlice\";\r\nimport { cleatTodos, sortTodos } from \"./Todo/todoSlice\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AddModal = () => {\r\n  const itemListRef = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const visible = useSelector((state) => state.modal.visibleModal);\r\n  const todos = useSelector((state) => state.todo.todos);\r\n  const currentNoteIndex = useSelector((state) => state.modal.currentNoteIndex);\r\n\r\n  const [localTitle, setLocalTitle] = useState(\"\");\r\n  const [currentTodo, setCurrentTodo] = useState(null);\r\n  const [todoTitle, setTodoTitle] = useState(\"\");\r\n\r\n  const onCancel = () => {\r\n    dispatch(onToggleShow(false));\r\n    dispatch(cleatTodos());\r\n    dispatch(setCurrentNoteIndex(null));\r\n    dispatch(setTitleEdit(\"Новая заметка\"));\r\n    setTodoTitle(\"\");\r\n  };\r\n\r\n  const saveEdit = useCallback((index) => {\r\n      const data = {\r\n        note: {\r\n          id: Date.now(),\r\n          title: localTitle,\r\n          todos\r\n        },\r\n        index\r\n      };\r\n\r\n      dispatch(saveEditNote(data));\r\n      dispatch(setCurrentNoteIndex(null));\r\n    }, [ dispatch, localTitle, todos ]);\r\n\r\n  const save = useCallback(() => {\r\n    const data = {\r\n      id: Date.now(),\r\n      title: localTitle,\r\n      todos\r\n    };\r\n\r\n    dispatch(saveNote(data));\r\n  }, [ dispatch, localTitle, todos ]);\r\n\r\n  const onSaveNote = useCallback(() => {\r\n    if (todos.length > 0) {\r\n      Number.isFinite(currentNoteIndex) ? saveEdit(currentNoteIndex) : save();\r\n\r\n      dispatch(onToggleShow(false));\r\n      dispatch(setTitleEdit(\"Новая заметка\"));\r\n      dispatch(cleatTodos());\r\n      setTodoTitle(\"\");\r\n    } else {\r\n      message.warning(\"Добавьте контент в заметку!\");\r\n    }\r\n  }, [ dispatch, save, saveEdit, todos, currentNoteIndex ]);\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => dispatch(sortTodos(arrayMove(todos, oldIndex, newIndex)));\r\n\r\n  return (\r\n    <Modal\r\n      title={<TitleModal title={localTitle} setTitleHandler={setLocalTitle} />}\r\n      visible={visible}\r\n      cancelText={<></>}\r\n      destroyOnClose={true}\r\n      onOk={onSaveNote}\r\n      onCancel={onCancel}\r\n    >\r\n      <InputModal\r\n        todoTitle={todoTitle}\r\n        currentTodo={currentTodo}\r\n        setTodoTitleHandler={setTodoTitle}\r\n        setCurrentTodoHandler={setCurrentTodo}\r\n      />\r\n      {todos.length > 0 && (\r\n        <SortableList\r\n          itemRef={itemListRef}\r\n          todos={todos}\r\n          setTodoTitleHandler={setTodoTitle}\r\n          setCurrentTodoHandler={setCurrentTodo}\r\n          onSortEnd={onSortEnd}\r\n          useDragHandle\r\n          helperClass=\"modal-list\"\r\n          getContainer={() => ReactDOM.findDOMNode(itemListRef.current).parentElement}\r\n        />\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddModal;\r\n","import \"./style.scss\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"logo\">\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Row, Col, Layout, Statistic } from \"antd\";\r\n\r\nimport Logo from \"../Logo\";\r\n\r\nconst { Header } = Layout;\r\n\r\nconst HeaderAnota = () => {\r\n  const notes = useSelector((state) => state.anota);\r\n\r\n  return (\r\n    <Header className=\"anota__header\">\r\n      <Row justify=\"space-between\" align=\"middle\">\r\n        <Col>\r\n          <Logo />\r\n        </Col>\r\n        <Col>\r\n          <Statistic\r\n            title=\"Количество заметок\"\r\n            value={notes.length}\r\n            valueStyle={{ color: \"white\" }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default HeaderAnota;\r\n","import { Button, Popconfirm, Typography } from \"antd\";\r\nimport { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { removeNote } from \"../../../appSlice\";\r\nimport {\r\n  onToggleShow,\r\n  setTitleEdit,\r\n  setCurrentNoteIndex\r\n} from \"../../Modal/modalSlice\";\r\nimport { editTodos } from \"../../Modal/Todo/todoSlice\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst PopoverNote = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const confirm = useCallback(\r\n    () => dispatch(removeNote(props.noteId)),\r\n    [props.noteId, dispatch]\r\n  );\r\n\r\n  const onShowModal = useCallback(() => {\r\n    dispatch(editTodos(props.noteTodos));\r\n    dispatch(setTitleEdit(props.noteTitle));\r\n    dispatch(onToggleShow(true));\r\n    dispatch(setCurrentNoteIndex(props.index));\r\n  }, [dispatch, props]);\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"text\" block={true} onClick={onShowModal}>\r\n        <Text type=\"success\">Редактировать</Text>\r\n      </Button>\r\n      <Popconfirm\r\n        title={`Удалить ${props.noteTitle}`}\r\n        okText=\"Да\"\r\n        cancelText=\"Нет\"\r\n        onConfirm={confirm}\r\n      >\r\n        <Button type=\"text\" block={true}>\r\n          <Text type=\"danger\">Удалить</Text>\r\n        </Button>\r\n      </Popconfirm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PopoverNote;\r\n","import { Checkbox, Typography, Popover, Button, List, Row, Col } from \"antd\";\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\n\r\nimport PopoverNote from \"./Popover\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Note = (props) => {\r\n\r\n  const ellipsisSetting = {\r\n    rows: 1,\r\n    tooltip: true,\r\n    expandable: true,\r\n    symbol: <span></span>,\r\n  };\r\n\r\n  return (\r\n    <div className=\"note__card\">\r\n      <List\r\n        dataSource={props.todos}\r\n        renderItem={(item) => (\r\n          <List.Item>\r\n            <Checkbox checked={item.isCheck} key={item.id}>\r\n              {item.title}\r\n            </Checkbox>\r\n          </List.Item>\r\n        )}\r\n        header={\r\n          <Row justify=\"space-between\" align=\"middle\" wrap={false}>\r\n            <Col span=\"21\">\r\n              <Title level={4} ellipsis={ellipsisSetting} style={{ textAlign: \"left\" }}>{props.title}</Title>\r\n            </Col>\r\n            <Col span=\"3\">\r\n              <Popover\r\n                placement=\"bottomRight\"\r\n                trigger=\"click\"\r\n                content={\r\n                  <PopoverNote\r\n                    noteId={props.id}\r\n                    noteTitle={props.title}\r\n                    noteTodos={props.todos}\r\n                    index={props.index}\r\n                  />\r\n                }\r\n                zIndex=\"999\"\r\n              >\r\n                <Button type=\"text\" icon={<EllipsisOutlined />}></Button>\r\n              </Popover>\r\n            </Col>\r\n          </Row>\r\n        }\r\n        footer={\r\n          <>\r\n            Done {props.todos.filter((item) => item.isCheck).length} of&nbsp;\r\n            {props.todos.length}\r\n          </>\r\n        }\r\n      ></List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import { SortableElement } from \"react-sortable-hoc\";\r\nimport { Col } from \"antd\";\r\n\r\nimport Note from \"../Note\";\r\n\r\nconst SortableItemNote = SortableElement((props) => {\r\n  return (\r\n    <Col className=\"note\" xs={24} sm={24} md={12} lg={8} xl={6}>\r\n      <Note index={props.indx} {...props.note} />\r\n    </Col>\r\n  );\r\n});\r\n\r\nexport default SortableItemNote;\r\n","import { SortableContainer } from \"react-sortable-hoc\";\r\nimport SortableItemNote from \"../SortableItemNote\";\r\n\r\nconst SortableListOfNotes = SortableContainer((props) => (\r\n  <div style={{ display: \"contents\" }}>\r\n    {props.notes.map((item, index) => (\r\n      <SortableItemNote note={item} indx={index} key={item.id} index={index} />\r\n    ))}\r\n  </div>\r\n));\r\n\r\nexport default SortableListOfNotes;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Layout, Button, Row } from \"antd\";\r\nimport { EditFilled } from \"@ant-design/icons\";\r\nimport arrayMove from 'array-move';\r\n\r\nimport SortableListOfNotes from \"../SortableListOfNotes\";\r\n\r\nimport { onToggleShow } from \"../Modal/modalSlice\";\r\nimport { saveNotesAfterSorting } from \"../../appSlice\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst ContentAnota = () => {\r\n  const dispatch = useDispatch();\r\n  const notes = useSelector((state) => state.anota);\r\n\r\n  const onShowModal = () => dispatch(onToggleShow(true));\r\n\r\n  const onSortEnd = ({oldIndex, newIndex}) => {\r\n    dispatch(saveNotesAfterSorting(arrayMove(notes, oldIndex, newIndex)));\r\n  };\r\n\r\n  return (\r\n    <Content className=\"anota__main\">\r\n      <Row gutter={[16, 24]}>\r\n        <SortableListOfNotes notes={notes} axis=\"xy\" pressDelay={205} onSortEnd={onSortEnd} useWindowAsScrollContainer={true} />\r\n      </Row>\r\n      <Button\r\n        type=\"primary\"\r\n        shape=\"circle\"\r\n        icon={<EditFilled />}\r\n        size=\"large\"\r\n        className=\"anota__btn-add-note\"\r\n        onClick={onShowModal}\r\n      ></Button>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ContentAnota;\r\n","import { Layout } from \"antd\";\r\n\r\nconst { Footer } = Layout;\r\n\r\nconst FooterAnota = () => {\r\n  return <Footer />;\r\n};\r\n\r\nexport default FooterAnota;\r\n","import { Layout } from \"antd\";\r\n\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport AddModal from \"./components/Modal\";\r\nimport HeaderAnota from \"./components/Header\";\r\nimport ContentAnota from \"./components/Content\";\r\nimport FooterAnota from \"./components/Footer\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Layout className=\"anota\">\r\n      <HeaderAnota />\r\n      <ContentAnota />\r\n      <FooterAnota />\r\n      <AddModal />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport modalSlice from \"../components/Modal/modalSlice\";\r\nimport appSlice from \"../appSlice\";\r\nimport todoSlice from \"../components/Modal/Todo/todoSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    anota: appSlice,\r\n    modal: modalSlice,\r\n    todo: todoSlice,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { get } from \"lodash\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport \"./styles/index.scss\";\r\n\r\nimport store from \"./store\";\r\nimport { fetchNotes } from \"./utils\";\r\nimport { getNotes } from \"./appSlice\";\r\n\r\nstore.subscribe(() => {\r\n  const data = {\r\n    notes: {\r\n      lists: get(store.getState(), \"anota\", \"\")\r\n    }\r\n  };\r\n\r\n  localStorage.setItem(\"vuex\", JSON.stringify(data));\r\n});\r\n\r\nconst notes = fetchNotes();\r\n\r\nif (notes) {\r\n  store.dispatch(getNotes(notes))\r\n}\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorkerRegistration.register();\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { get } from \"lodash\";\r\n\r\nexport const fetchNotes = (key) => {\r\n  try {\r\n    const response = localStorage.getItem(\"vuex\");\r\n\r\n    if (response) {\r\n      return get(JSON.parse(response), \"notes.lists\", []);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n"],"sourceRoot":""}