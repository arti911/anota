{"version":3,"sources":["components/Modal/Title/index.js","components/Modal/Todo/todoSlice.js","components/Modal/Todo/index.js","constants.js","components/Modal/Input/index.js","appSlice.js","components/Modal/modalSlice.js","components/Modal/index.js","components/Logo/index.js","components/Header/index.js","components/Note/Popover/index.js","components/Note/index.js","components/Content/index.js","components/Footer/index.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","store/index.js","index.js","utils.js"],"names":["Text","Typography","TitleModal","props","title","useSelector","state","modal","useEffect","setTitleHandler","options","onChange","editable","todoSlice","createSlice","name","initialState","todos","isEdit","reducers","saveTodo","action","push","payload","checkTodo","index","todo","splice","removeTodo","toggleEdit","saveEditTodo","itemIndex","findIndex","item","id","editTodos","concat","cleatTodos","length","actions","TodoModal","setTodoTitleHandler","setCurrentTodoHandler","dispatch","useDispatch","edit","useCallback","confirm","message","success","shape","icon","EditOutlined","type","onClick","okText","cancelText","onConfirm","DeleteOutlined","danger","onCheck","event","isCheck","target","checked","Item","DEFAULT_TODO","Date","now","InputModal","onChangeTodoTitle","value","onSaveTodo","currentTodo","todoTitle","onClose","wrap","style","gap","placeholder","disabled","CloseOutlined","appSlice","getNotes","saveNote","saveEditNote","note","removeNote","filter","modalSlice","visibleModal","currentNoteIndex","onToggleShow","setTitleEdit","setCurrentNoteIndex","AddModal","visible","useState","localTitle","setLocalTitle","setCurrentTodo","setTodoTitle","onSaveNote","Number","isFinite","warning","Title","destroyOnClose","onOk","onCancel","Input","dataSource","renderItem","Todo","Logo","className","Header","Layout","HeaderAnota","notes","anota","justify","align","valueStyle","color","PopoverNote","noteId","onShowModal","noteTodos","noteTitle","block","Note","ellipsisSetting","rows","tooltip","expandable","symbol","header","span","level","ellipsis","textAlign","placement","trigger","content","Popover","EllipsisOutlined","footer","Content","ContentAnota","gutter","map","xs","sm","md","lg","xl","EditFilled","size","Footer","FooterAnota","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","store","subscribe","data","lists","get","getState","localStorage","setItem","JSON","stringify","key","response","getItem","parse","e","fetchNotes","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.49035a91.chunk.js","sourcesContent":["import { Typography } from \"antd\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst TitleModal = (props) => {\r\n  const title = useSelector((state) => state.modal.title);\r\n\r\n  useEffect(() => {\r\n    props.setTitleHandler(title);\r\n  }, []);\r\n\r\n  const options = {\r\n    onChange: props.setTitleHandler\r\n  };\r\n\r\n  return <Text editable={options}>{props.title}</Text>;\r\n};\r\n\r\nexport default TitleModal;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todo\",\r\n  initialState: {\r\n    todos: [],\r\n    isEdit: false\r\n  },\r\n  reducers: {\r\n    saveTodo: (state, action) => {\r\n      state.todos.push(action.payload);\r\n    },\r\n    checkTodo: (state, action) => {\r\n      const { index, todo } = action.payload;\r\n\r\n      state.todos.splice(index, 1, todo);\r\n    },\r\n    removeTodo: (state, action) => {\r\n      state.todos.splice(action.payload, 1);\r\n    },\r\n    toggleEdit: (state, action) => {\r\n      state.isEdit = action.payload;\r\n    },\r\n    saveEditTodo: (state, action) => {\r\n      const itemIndex = state.todos.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n\r\n      state.todos.splice(itemIndex, 1, action.payload);\r\n    },\r\n    editTodos: (state, action) => {\r\n      state.todos = state.todos.concat(action.payload);\r\n    },\r\n    cleatTodos: (state, action) => {\r\n      state.todos.splice(0, state.todos.length);\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  saveTodo,\r\n  checkTodo,\r\n  removeTodo,\r\n  toggleEdit,\r\n  saveEditTodo,\r\n  editTodos,\r\n  cleatTodos\r\n} = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;\r\n","import { Button, List, Checkbox, Popconfirm, message } from \"antd\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { checkTodo, removeTodo, toggleEdit } from \"./todoSlice\";\r\n\r\nconst TodoModal = ({\r\n  todo,\r\n  todos,\r\n  index,\r\n  setTodoTitleHandler,\r\n  setCurrentTodoHandler\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const edit = useCallback(() => {\r\n    dispatch(toggleEdit(true));\r\n    setTodoTitleHandler(todo.title);\r\n    setCurrentTodoHandler(todo);\r\n  }, [dispatch, todo, setTodoTitleHandler, setCurrentTodoHandler]);\r\n\r\n  const confirm = useCallback(() => {\r\n    dispatch(removeTodo(index));\r\n    message.success(`${todo.title} успешно удален!`);\r\n  }, [dispatch, index, todo]);\r\n\r\n  const actions = [\r\n    <Button\r\n      shape=\"circle\"\r\n      icon={<EditOutlined />}\r\n      type=\"primary\"\r\n      onClick={edit}\r\n    ></Button>,\r\n    <Popconfirm\r\n      title={`Удалить ${todo.title}?`}\r\n      okText=\"Да\"\r\n      cancelText=\"Нет\"\r\n      onConfirm={confirm}\r\n    >\r\n      <Button shape=\"circle\" icon={<DeleteOutlined />} danger={true}></Button>\r\n    </Popconfirm>\r\n  ];\r\n\r\n  const onCheck = useCallback(\r\n    (event) => {\r\n      dispatch(\r\n        checkTodo({\r\n          index: index,\r\n          todo: {\r\n            ...todos[index],\r\n            isCheck: event.target.checked\r\n          }\r\n        })\r\n      );\r\n    },\r\n    [dispatch, todos, index]\r\n  );\r\n\r\n  return (\r\n    <List.Item actions={actions}>\r\n      <Checkbox checked={todo.isCheck} onChange={onCheck}>\r\n        {todo.title}\r\n      </Checkbox>\r\n    </List.Item>\r\n  );\r\n};\r\n\r\nexport default TodoModal;\r\n","export const DEFAULT_NOTE = {\r\n  id: Date.now(),\r\n  title: \"\",\r\n  todos: [],\r\n};\r\n\r\nexport const DEFAULT_TODO = {\r\n  id: 0,\r\n  title: \"\",\r\n  isCheck: false,\r\n};\r\n","import { Input, Button, Row } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { DEFAULT_TODO } from \"../../../constants\";\r\n\r\nimport { saveTodo, saveEditTodo, toggleEdit } from \"../Todo/todoSlice\";\r\n\r\nconst InputModal = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isEdit = useSelector((state) => state.todo.isEdit);\r\n\r\n  const onChangeTodoTitle = useCallback(\r\n    ({ target }) => {\r\n      props.setTodoTitleHandler(target.value);\r\n    },\r\n    [props]\r\n  );\r\n\r\n  const onSaveTodo = useCallback(() => {\r\n    if (!isEdit) {\r\n      dispatch(\r\n        saveTodo({\r\n          ...DEFAULT_TODO,\r\n          id: Date.now(),\r\n          title: props.todoTitle\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        saveEditTodo({\r\n          ...props.currentTodo,\r\n          title: props.todoTitle\r\n        })\r\n      );\r\n      dispatch(toggleEdit(false));\r\n    }\r\n\r\n    props.setTodoTitleHandler(\"\");\r\n  }, [props, isEdit, dispatch]);\r\n\r\n  const onClose = useCallback(() => {\r\n    props.setTodoTitleHandler(\"\");\r\n    props.setCurrentTodoHandler(null);\r\n    dispatch(toggleEdit(false));\r\n  }, [props, dispatch]);\r\n\r\n  return (\r\n    <Row wrap={false} style={{gap: \"16px\"}}>\r\n      <Input\r\n        placeholder=\"Добавьте пункт\"\r\n        onChange={onChangeTodoTitle}\r\n        value={props.todoTitle}\r\n      />\r\n      <Button\r\n        type=\"primary\"\r\n        disabled={props.todoTitle.length === 0}\r\n        onClick={onSaveTodo}\r\n      >\r\n        {isEdit ? \"Сохранить изменения\" : \"Добавить\"}\r\n      </Button>\r\n      <Button icon={<CloseOutlined />} type=\"text\" onClick={onClose}></Button>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default InputModal;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState: [],\r\n  reducers: {\r\n    getNotes: (state, action) => {\r\n      return action.payload;\r\n    },\r\n    saveNote: (state, action) => {\r\n      state.push(action.payload);\r\n    },\r\n    saveEditNote: (state, action) => {\r\n      state.splice(action.payload.index, 1, action.payload.note);\r\n    },\r\n    removeNote: (state, action) => {\r\n      return state.filter((item) => item.id !== action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getNotes, saveNote, saveEditNote, removeNote } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst modalSlice = createSlice({\r\n  name: \"modal\",\r\n  initialState: {\r\n    visibleModal: false,\r\n    title: \"Новая заметка\",\r\n    currentNoteIndex: null\r\n  },\r\n  reducers: {\r\n    onToggleShow: (state, action) => {\r\n      state.visibleModal = action.payload;\r\n    },\r\n    setTitleEdit: (state, action) => {\r\n      state.title = action.payload;\r\n    },\r\n    setCurrentNoteIndex: (state, action) => {\r\n      state.currentNoteIndex = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  onToggleShow,\r\n  setTitleEdit,\r\n  setCurrentNoteIndex\r\n} = modalSlice.actions;\r\n\r\nexport default modalSlice.reducer;\r\n","import { useCallback, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Modal, List, message } from \"antd\";\r\n\r\nimport TitleModal from \"./Title\";\r\nimport TodoModal from \"./Todo\";\r\nimport InputModal from \"./Input\";\r\n\r\nimport { saveNote, saveEditNote } from \"../../appSlice\";\r\nimport { onToggleShow, setCurrentNoteIndex, setTitleEdit } from \"./modalSlice\";\r\nimport { cleatTodos } from \"./Todo/todoSlice\";\r\n\r\nconst AddModal = () => {\r\n  const dispatch = useDispatch();\r\n  const visible = useSelector((state) => state.modal.visibleModal);\r\n  const todos = useSelector((state) => state.todo.todos);\r\n  const currentNoteIndex = useSelector((state) => state.modal.currentNoteIndex);\r\n\r\n  const [localTitle, setLocalTitle] = useState(\"\");\r\n  const [currentTodo, setCurrentTodo] = useState(null);\r\n  const [todoTitle, setTodoTitle] = useState(\"\");\r\n\r\n  const onCancel = () => {\r\n    dispatch(onToggleShow(false));\r\n    dispatch(cleatTodos());\r\n    dispatch(setCurrentNoteIndex(null));\r\n  };\r\n\r\n  const onSaveNote = useCallback(() => {\r\n    if (todos.length > 0) {\r\n      if (Number.isFinite(currentNoteIndex)) {\r\n        dispatch(\r\n          saveEditNote({\r\n            note: {\r\n              id: Date.now(),\r\n              title: localTitle,\r\n              todos\r\n            },\r\n            index: currentNoteIndex\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(\r\n          saveNote({\r\n            id: Date.now(),\r\n            title: localTitle,\r\n            todos\r\n          })\r\n        );\r\n      }\r\n\r\n      dispatch(onToggleShow(false));\r\n      dispatch(cleatTodos());\r\n      dispatch(setTitleEdit(\"Новая заметка\"));\r\n    } else {\r\n      message.warning(\"Добавьте контент в заметку!\");\r\n    }\r\n  }, [dispatch, localTitle, todos, currentNoteIndex]);\r\n\r\n  return (\r\n    <Modal\r\n      title={<TitleModal title={localTitle} setTitleHandler={setLocalTitle} />}\r\n      visible={visible}\r\n      cancelText={<></>}\r\n      destroyOnClose={true}\r\n      onOk={onSaveNote}\r\n      onCancel={onCancel}\r\n    >\r\n      <InputModal\r\n        todoTitle={todoTitle}\r\n        currentTodo={currentTodo}\r\n        setTodoTitleHandler={setTodoTitle}\r\n        setCurrentTodoHandler={setCurrentTodo}\r\n      />\r\n      <List\r\n        dataSource={todos}\r\n        renderItem={(item, index) => (\r\n          <TodoModal\r\n            todos={todos}\r\n            todo={item}\r\n            index={index}\r\n            setTodoTitleHandler={setTodoTitle}\r\n            setCurrentTodoHandler={setCurrentTodo}\r\n          />\r\n        )}\r\n      ></List>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddModal;\r\n","import \"./style.scss\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"logo\">\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Row, Col, Layout, Statistic } from \"antd\";\r\n\r\nimport Logo from \"../Logo\";\r\n\r\nconst { Header } = Layout;\r\n\r\nconst HeaderAnota = () => {\r\n  const notes = useSelector((state) => state.anota);\r\n\r\n  return (\r\n    <Header className=\"anota__header\">\r\n      <Row justify=\"space-between\" align=\"middle\">\r\n        <Col>\r\n          <Logo />\r\n        </Col>\r\n        <Col>\r\n          <Statistic\r\n            title=\"Количество заметок\"\r\n            value={notes.length}\r\n            valueStyle={{ color: \"white\" }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default HeaderAnota;\r\n","import { Button, Popconfirm, Typography } from \"antd\";\r\nimport { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { removeNote } from \"../../../appSlice\";\r\nimport {\r\n  onToggleShow,\r\n  setTitleEdit,\r\n  setCurrentNoteIndex\r\n} from \"../../Modal/modalSlice\";\r\nimport { editTodos } from \"../../Modal/Todo/todoSlice\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst PopoverNote = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const confirm = useCallback(\r\n    () => dispatch(removeNote(props.noteId)),\r\n    [props.noteId, dispatch]\r\n  );\r\n\r\n  const onShowModal = useCallback(() => {\r\n    dispatch(editTodos(props.noteTodos));\r\n    dispatch(setTitleEdit(props.noteTitle));\r\n    dispatch(onToggleShow(true));\r\n    dispatch(setCurrentNoteIndex(props.index));\r\n  }, [dispatch, props]);\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"text\" block={true} onClick={onShowModal}>\r\n        <Text type=\"success\">Редактировать</Text>\r\n      </Button>\r\n      <Popconfirm\r\n        title={`Удалить ${props.noteTitle}`}\r\n        okText=\"Да\"\r\n        cancelText=\"Нет\"\r\n        onConfirm={confirm}\r\n      >\r\n        <Button type=\"text\" block={true}>\r\n          <Text type=\"danger\">Удалить</Text>\r\n        </Button>\r\n      </Popconfirm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PopoverNote;\r\n","import { Checkbox, Typography, Popover, Button, List, Row, Col } from \"antd\";\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\n\r\nimport PopoverNote from \"./Popover\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Note = (props) => {\r\n  const ellipsisSetting = {\r\n    rows: 1,\r\n    tooltip: true,\r\n    expandable: true,\r\n    symbol: <span></span>,\r\n  };\r\n\r\n  return (\r\n    <div className=\"note__card\">\r\n      <List\r\n        dataSource={props.todos}\r\n        renderItem={(item) => (\r\n          <List.Item>\r\n            <Checkbox checked={item.isCheck} key={item.id}>\r\n              {item.title}\r\n            </Checkbox>\r\n          </List.Item>\r\n        )}\r\n        header={\r\n          <Row justify=\"space-between\" align=\"middle\" wrap={false}>\r\n            <Col span=\"21\">\r\n              <Title level={4} ellipsis={ellipsisSetting} style={{ textAlign: \"left\" }}>{props.title}</Title>\r\n            </Col>\r\n            <Col span=\"3\">\r\n              <Popover\r\n                placement=\"bottomRight\"\r\n                trigger=\"click\"\r\n                content={\r\n                  <PopoverNote\r\n                    noteId={props.id}\r\n                    noteTitle={props.title}\r\n                    noteTodos={props.todos}\r\n                    index={props.index}\r\n                  />\r\n                }\r\n              >\r\n                <Button type=\"text\" icon={<EllipsisOutlined />}></Button>\r\n              </Popover>\r\n            </Col>\r\n          </Row>\r\n        }\r\n        footer={\r\n          <>\r\n            Done {props.todos.filter((item) => item.isCheck).length} of&nbsp;\r\n            {props.todos.length}\r\n          </>\r\n        }\r\n      ></List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Layout, Button, Row, Col, } from \"antd\";\r\nimport { EditFilled } from \"@ant-design/icons\";\r\n\r\nimport Note from \"../Note\";\r\n\r\nimport { onToggleShow } from \"../Modal/modalSlice\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst ContentAnota = () => {\r\n  const dispatch = useDispatch();\r\n  const notes = useSelector((state) => state.anota);\r\n\r\n  const onShowModal = () => dispatch(onToggleShow(true));\r\n\r\n  return (\r\n    <Content className=\"anota__main\">\r\n      <Row gutter={[16, 24]}>\r\n        {notes.map((item, index) => (\r\n          <Col\r\n            className=\"note\"\r\n            xs={24}\r\n            sm={24}\r\n            md={12}\r\n            lg={8}\r\n            xl={6}\r\n            key={item.id}\r\n          >\r\n            <Note {...item} index={index} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n      <Button\r\n        type=\"primary\"\r\n        shape=\"circle\"\r\n        icon={<EditFilled />}\r\n        size=\"large\"\r\n        className=\"anota__btn-add-note\"\r\n        onClick={onShowModal}\r\n      ></Button>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ContentAnota;\r\n","import { Layout } from \"antd\";\r\n\r\nconst { Footer } = Layout;\r\n\r\nconst FooterAnota = () => {\r\n  return <Footer />;\r\n};\r\n\r\nexport default FooterAnota;\r\n","import { Layout } from \"antd\";\n\nimport \"antd/dist/antd.css\";\n\nimport AddModal from \"./components/Modal\";\nimport HeaderAnota from \"./components/Header\";\nimport ContentAnota from \"./components/Content\";\nimport FooterAnota from \"./components/Footer\";\n\nimport \"./style.scss\";\n\nconst App = () => {\n  return (\n    <Layout className=\"anota\">\n      <HeaderAnota />\n      <ContentAnota />\n      <FooterAnota />\n      <AddModal />\n    </Layout>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport modalSlice from \"../components/Modal/modalSlice\";\r\nimport appSlice from \"../appSlice\";\r\nimport todoSlice from \"../components/Modal/Todo/todoSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    anota: appSlice,\r\n    modal: modalSlice,\r\n    todo: todoSlice,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { get } from \"lodash\";\n\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./styles/index.scss\";\n\nimport store from \"./store\";\nimport { fetchNotes } from \"./utils\";\nimport { getNotes } from \"./appSlice\";\n\nstore.subscribe(() => {\n  const data = {\n    notes: {\n      lists: get(store.getState(), \"anota\", \"\")\n    }\n  };\n\n  localStorage.setItem(\"vuex\", JSON.stringify(data));\n});\n\nconst notes = fetchNotes();\n\nif (notes) {\n  store.dispatch(getNotes(notes))\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { get } from \"lodash\";\r\n\r\nexport const fetchNotes = (key) => {\r\n  try {\r\n    const response = localStorage.getItem(\"vuex\");\r\n\r\n    if (response) {\r\n      return get(JSON.parse(response), \"notes.lists\", []);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n"],"sourceRoot":""}